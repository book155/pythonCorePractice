研发效率提示：
一、传统版本
1、个人级构建现状（V3R6版本）
（1）构建配置为串型构建，常出现等待状况，并行构建成功率低。
（2）构建服务配置为windows服务，windows服务器在资源同步、编译、构建软件包等方面效率较低。
（3）环境搭建流程长，搭一套环境需要1天时间。
2、个人级构建提升思路（V3R8版本）
（1）提升构建成功率。通过配置模块构件快照，构筑并行构建能力。
（2）提升构建效率。构建配置为并行构建，利用公司RPM资源自动调度能力，在出现等待时自动分配资源。
（3）提升构建效率。构建服务配置为linux，提升资源同步，构建软件包方面的优势，提升构建效率。
（4）提升环境搭建效率。全自动化快速部署虚拟机镜像，环境部署效率成倍提升。
（5）提升安全能力。使用codeMars工具规范化安全告警处理流程，提升codeDEX告警处理效率

版本级构建现状（V3R6版本）
（1）构建过程，各组件、安装盘构建方式未归一，构建成功率低
（2）编译过程顺序执行，编译时间较长。
（3）静态检查模块不统一，例外未做到自动化屏蔽
（4）切平台覆盖定制项多，手工切换工作量大。
版本级构建提升思路（V3R8版本）
（1）提升构建成功率。构建过程按照编译、构建组件包、构建安装盘的流程执行
（2）提升构建效率。按照版本架构进行并行编译，执行先公共模块编译，再并行构建的流程。
（3）提升构建效率。通过平台“N+1”需求、自动化定制工具等进行全自动化切平台。
（4）提升代码质量守护能力。通过自动化模块统一工具、例外自动化屏蔽工具有效管理代码质量。

其他（cycletime、特性效率）
（1）自动化SR关闭时间监控，构建最快交付构建
（2）SR创建时间延迟   王炳胜
（3）尽量少的人力资源   张提伟
（4）尽快过TR5 时间点
（5）尽快下载软件包

二、云化版本
2、个人级构建提升思路：（从构建微服务包、服务包角度分析）
（1）提升流水线自动化构建能力。自动化流水线构建服务/微服务编译静态检查能力
（2）提升建软件仓库管理能力。构建软件仓库CloudArtifact全自动化管理
（3）提升动化开发自测试能力。CloudTest构建全自动化微服务开发自测试。
（4）提升个人级构建环境部署能力。构建服务器部署CloudDeploy全自动化部署环境
（5）提升个人级构建环境管理能力。构建CloudStage环境管理能力。
1、版本级构建提升思路（从解决方案服务大包，安装盘制作角度分析）
（1）提升安装盘构建自动化能力。通过配置解决方案组装流水线，自动化构建多个服务包。
（2）提升安装盘一致性和完整性看护能力。通过配置CMS签名工具，提升安装盘交付的一致性和完整性。
（3）提升代码质量守护能力。云龙构建CloudAnalytis构建宝报表能力，进行静态检查自动统计。
（4）提升安装盘构建成功率。构建切平台和构建安装盘检查能力
（5）提升版本级环境部署能力。构建服务器部署CloudDeploy全自动化部署环境
（6）提升版本级环境管理能力。构建CloudStage环境管理能力。



三、流程规范化（从构建角度，前面三方件选型、PDM入库由SE统一管理）
总体规划
（1）统一配置管理要求，由版本CIE统一进行统一编译，统一静态检查，统一管理黑鸦扫描。
（2）安装盘制作过程必须使用公司的CI构建，确保构建过程无人为修改。
（3）排查构建工具的优先等级，及时更换优先级别高的构建工具，保证构建的安全性。
（4）通过黑鸦和二进制扫描，排查各领域代码库的二进制文件，获取《开源认证报告》，确保所有文件能够溯源。
逐点改进
1、各领域自行负责版本构建、静态检查、黑鸦扫描等任务。
问题和改进点：
（1）版本配置管理问题。
配置库分支标签管理，VMP软件管理可能不到位
改进点：
 <1>通过申请每个领域配置库权限，统一进行管理分支和标签。
 <2>软件包构建通过VMP进行获取。
 
（2）安全问题。
<1>可能存在无法溯源的二进制文件，导致安全问题。
<2>可能存在安装盘的一致性和完整性问题。安装盘构建过程中可能存在人为修改。
<3>可能存在不安全构建工具，影响编译环境流程搭建。
<4>代码安全性扫描工具不统一，影响版本整体安全性排查。
改进点：
<1>统一管理统一领域的黑鸦、二进制扫描，统一管理各领域开源认证报告，确保所有文件能够溯源
<2>统一通过CI进行制作安装盘，确保构建过程无人为修改。
<3>统一管理各领域构建工具申请。及时更换优先级别高的构建工具，保证构建的安全性。
<4>统一各领域静态检查规范，守护版本代码质量。

（3）版本流程控制
<1>无法统一进行配置库管理，各领域版本构建时间点无法统一控制。版本转测试质量难以控制。
改进点
<1>获取各领域配置库权限，统一按照版本计划进行管理。




