研发效率提升：
一，传统版本
1、个人级构建现状（V3R6版本）
(1)个人级构建只部署了一套服务器，出现等待状况。
(2)windows服务器在资源同步、编译、打包方面效率较低
(3)个人级构建环境搭建数量多，耗时长。搭一套环境需要1天时间。
(4)多台服务并行构建会出现构建失败。

2、个人级构建提升思路：（V3R8版本）
（1）利用公司RPM资源自动调度能力，增加多套服务器。在出现等待的任务时，自动分配到空闲服务器。
（2）切换linux服务器，利用linux在资源同步，软件压缩与解压方面的优势，提升效率
（3）利用公司hicloud，制作个人级构建镜像盘，快速部署。
（4）个人级构建试用codeMars，提升codeDEX安全告警处理效率.
（5）通过maven deploy机制，自动更新公共模块，提升构建成功率。

版本级构建现状（V3R6版本）
（1）构建未流程化，各组件、安装盘构建方式凌乱
（2）编译过程顺序执行，编译时间较长
（3）静态检查模块不统一，例外未做到自动化屏蔽
（4）切平台覆盖定制项多，手工切换工作量大。

版本级构建提升思路（V3R8版本）
（1）构建过程按照编译、构建组件包、构建安装盘顺序执行
（2）按照版本架构进行并行编译，提升构建效率。
（3）自动化模块统一工具，例外自动化屏蔽
（4）通过N+1、自动化定制工具等进行全自动化切平台。

二、云化版本
1、版本级构建提升思路（从解决方案服务大包、安装盘制作角度分析）：
（1）通过配置解决方案组装流水线，自动化构建多个服务包。
（2）通过配置CMS签名工具，提升安装盘交付的一致性和完整性。
（3）



2、个人级构建提升思路：（从构建微服务包、服务包角度分析）


三、统计构建流程规范化
1、统一构建的领域
（1）统一配置管理要求，由版本CIE统一进行统一编译，统一静态检查，统一进行黑鸭扫描。
（2）安装盘制作过程必须使用公司的CI工具进行出盘，不允许手工刷包，确保构建过程无人为修改。
（3）排查构建工具的优先等级，及时更换优先级别高的构建工具，保证构建的安全性。
（4）通过黑鸭和二进制扫描，排查各领域代码库的二进制文件，确保所有文件能够溯源，获取《开源认证报告》。






